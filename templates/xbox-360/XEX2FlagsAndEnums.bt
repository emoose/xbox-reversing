//--------------------------------------
//--- 010 Editor v3.0.5 Binary Template
//
// File:     XEX2FlagsAndEnums.bt
// Author:   Anthony
// Revision: 1.0
// Purpose:  Defines basic flags and enums
//--------------------------------------
enum IMAGEKEYS {
    SizeOfHeaders               = 0x00000101, // XEX0-only? seems it should always match SizeOfHeaders in main XEX header
    XexSections                 = 0x000001FF, // XEX3F-only? 1434 seems to create this
//  ModuleFlags_XEX0            = 0x00000201, // stores XEX flags (title/system, exe/dll) in XEX0 executables
    OriginalBaseAddress_XEX3F   = 0x00000201,
    HeaderSectionTable          = 0x000002FF,
    FileDataDescriptor          = 0x000003FF,
    BaseReference               = 0x00000405,
    DeltaPatchDescriptor        = 0x000005FF,
    KeyVaultPrivs_Alt           = 0x00004004,
    KeyVaultPrivs               = 0x000040FF,
    TimeRange_Alt               = 0x00004104,
    TimeRange                   = 0x000041FF,
    ConsoleIdTable              = 0x000042FF,
    DiscProfileID               = 0x00004304,
    BoundingPath                = 0x000080FF,
    BuildVersions_XEX3F         = 0x00008102,
    DeviceId                    = 0x00008105,
    OriginalBaseAddress         = 0x00010001,
    ExecutionID_XEX0            = 0x00010005,
    EntryPoint                  = 0x00010100,
    FastcapEnabled_XEX2D        = 0x00010200,
    PEBase                      = 0x00010201,
    Imports_OldKey              = 0x000102FF, // XEX25 key
    PEExports_XEX2D             = 0x00010300,
//  SPAFileName_XEX0            = 0x000103FF,
    Imports                     = 0x000103FF,
    PEExports_XEX1              = 0x00010400,
    StackSize_XEX25             = 0x00010400, // XEX25 key
    TLSData_OldKey              = 0x00010504, // XEX25 key
    VitalStats                  = 0x00018002,
    CallcapImports              = 0x00018102,
    FastcapEnabled              = 0x00018200,
    PEModuleName                = 0x000183FF,
    BuildVersions               = 0x000200FF,
    TLSData                     = 0x00020104,
    BuildVersions_OldKey        = 0x000201FF, // XEX25 key
    StackSize                   = 0x00020200,
    FSCacheSize                 = 0x00020301,
    XapiHeapSize                = 0x00020401,
    PageHeapSizeFlags           = 0x00028002,
    Privileges                  = 0x00030000,
    Privileges_32               = 0x00030100, // privilege IDs 32 onward
    Privileges_64               = 0x00030200, // privilege IDs 64 onward
    ExecutionID                 = 0x00040006,
    ExecutionID_XEX25           = 0x00040008,
    ServiceIDList               = 0x000401FF,
    WorkspaceSize               = 0x00040201,
    GameRatings                 = 0x00040310,
    SpaName                     = 0x000403FF, // XEX2D only?
    LANKey                      = 0x00040404,
    MicrosoftLogo               = 0x000405FF,
    MultidiskMediaIDs           = 0x000406FF,
    AlternateTitleIDs           = 0x000407FF,
    AdditionalTitleMemory       = 0x00040801,
    IsExecutable                = 0x000E0001, // XEX3F only? maybe means NoExports?
    ImportsByName               = 0x00E10302,
    ExportsByName               = 0x00E10402,
    UserModeImportDeps          = 0x00E105FF,
};

typedef struct MODULEFLAGS {
    DWORD  TitleProcess  : 1;
    DWORD  TitleImports  : 1;
    DWORD  Debugger      : 1;
    DWORD  Dll           : 1;
    DWORD  Patch         : 1;
    DWORD  PatchFull     : 1;
    DWORD  PatchDelta    : 1;
    DWORD  UserMode      : 1;
    DWORD                : 22;
    DWORD  BoundPath     : 1;
    DWORD  SilentLoad    : 1;
};

typedef struct XEX0_MODULEFLAGS {
    DWORD  SystemProcess : 1;
    DWORD  TitleProcess  : 1;
    DWORD  Dll           : 1;
    DWORD  Debugger      : 1 <comment="XEX3F ('XEX?') only">;
};

typedef struct ALLOWEDMEDIATYPES {
    DWORD   HardDisk                    : 1; //= 0x00000001
    DWORD   DvdX2                       : 1; //= 0x00000002
    DWORD   DvdCd                       : 1; //= 0x00000004
    DWORD   Dvd5                        : 1; //= 0x00000008
    DWORD   Dvd9                        : 1; //= 0x00000010
    DWORD   SystemFlash                 : 1; //= 0x00000020
    DWORD                               : 1; //= 0x00000040
    DWORD   MemoryUnit                  : 1; //= 0x00000080
    DWORD   MassStorageDevice           : 1; //= 0x00000100
    DWORD   SmbFilesystem               : 1; //= 0x00000200
    DWORD   DirectFromRam               : 1; //= 0x00000400
    DWORD                               : 1; //= 0x00000800
    DWORD   SecureVirtualOpticalDevice  : 1; //= 0x00001000
    DWORD   WirelessNStorageDevice      : 1; //= 0x00002000 (\Device\Nomnil)
    DWORD   SystemExtendedPartition     : 1; //= 0x00004000 (SEP)
    DWORD   SystemAuxiliaryPartition    : 1; //= 0x00008000 (SAP)
    DWORD                               : 8; //= 0x00010000-0x00800000
    DWORD   InsecurePackage             : 1; //= 0x01000000
    DWORD   SaveGamePackage             : 1; //= 0x02000000
    DWORD   LocallySignedPackage        : 1; //= 0x04000000
    DWORD   LiveSignedPackage           : 1; //= 0x08000000
    DWORD   XboxPlatformPackage         : 1; //= 0x10000000
};

typedef struct IMAGEFLAGS {
    DWORD   Unknown1                   : 1; //= 0x00000001 (maybe RevocationCheckRequired?)
    DWORD   ManufacturingUtility       : 1; //= 0x00000002
    DWORD   ManufacturingSupportTool   : 1; //= 0x00000004
         // ManufacturingAwareModule          = 0x00000006 
    DWORD   Xgd2MediaOnly              : 1; //= 0x00000008
    DWORD   DataCenterRequired         : 1; //= 0x00000010
    DWORD   DataCenterAware            : 1; //= 0x00000020
    DWORD                              : 2; //= 0x00000040-0x00000080
    DWORD   CardeaKey                  : 1; //= 0x00000100
    DWORD   XeikaKey                   : 1; //= 0x00000200
    DWORD   TitleUserMode              : 1; //= 0x00000400
    DWORD   SystemUserMode             : 1; //= 0x00000800
    DWORD   Orange0                    : 1; //= 0x00001000
    DWORD   Orange1                    : 1; //= 0x00002000
    DWORD   Orange2                    : 1; //= 0x00004000
    DWORD                              : 1; //= 0x00008000
    DWORD   IptvSignupApplication      : 1; //= 0x00010000
    DWORD   IptvTitleApplication       : 1; //= 0x00020000
    DWORD                              : 8; //= 0x00040000-0x02000000
    DWORD   KeyVaultPrivilegesRequired : 1; //= 0x04000000
    DWORD   OnlineActivationRequired   : 1; //= 0x08000000
    DWORD   PageSize4Kb                : 1; //= 0x10000000
    DWORD   NoGameRegion               : 1; //= 0x20000000
    DWORD   RevocationCheckOptional    : 1; //= 0x40000000
    DWORD   RevocationCheckRequired    : 1; //= 0x80000000
};

typedef struct XEX_PRIVILEGES {
    DWORD   NoForceReboot                   : 1; //= 0x00000001
    DWORD   ForegroundTasks                 : 1; //= 0x00000002
    DWORD   NoOddMapping                    : 1; //= 0x00000004
    DWORD   HandleMceInput                  : 1; //= 0x00000008
    DWORD   RestrictHudFeatures             : 1; //= 0x00000010
    DWORD   HandleGamepadDisconnect         : 1; //= 0x00000020
    DWORD   InsecureSockets                 : 1; //= 0x00000040
    DWORD   Xbox1XspInterop                 : 1; //= 0x00000080
    DWORD   SetDashContext                  : 1; //= 0x00000100
    DWORD   TitleUsesGameVoiceChannel       : 1; //= 0x00000200
    DWORD   TitlePal50Incompatible          : 1; //= 0x00000400
    DWORD   TitleInsecureUtilitydrive       : 1; //= 0x00000800
    DWORD   TitleXamHooks                   : 1; //= 0x00001000
    DWORD   TitlePii                        : 1; //= 0x00002000
    DWORD   CrossplatformSystemLink         : 1; //= 0x00004000
    DWORD   MultidiscSwap                   : 1; //= 0x00008000
    DWORD   MultidiscInsecureMedia          : 1; //= 0x00010000
    DWORD   Ap25Media                       : 1; //= 0x00020000
    DWORD   NoConfirmExit                   : 1; //= 0x00040000
    DWORD   AllowBackgroundDownload         : 1; //= 0x00080000
    DWORD   CreatePersistableRamdrive       : 1; //= 0x00100000
    DWORD   InheritPersistedRamdrive        : 1; //= 0x00200000
    DWORD   AllowHudVibration               : 1; //= 0x00400000
    DWORD   TitleBothUtilityPartitions      : 1; //= 0x00800000
    DWORD   HandleIPTVInput                 : 1; //= 0x01000000
    DWORD   PreferBigbuttonInput            : 1; //= 0x02000000
    DWORD   Reserved26                      : 1; //= 0x04000000
    DWORD   MultidiscCrossTitle             : 1; //= 0x08000000
    DWORD   TitleInstallIncompatible        : 1; //= 0x10000000
    DWORD   AllowAvatarGetMetadataByXUID    : 1; //= 0x20000000
    DWORD   AllowControllerSwapping         : 1; //= 0x40000000
    DWORD   DashExtensibilityModule         : 1; //= 0x80000000
};

typedef struct XEX_PRIVILEGES_32 {
    DWORD   AllowNetworkReadCancel          : 1; //= 0x00000001
    DWORD   UninterruptableReads            : 1; //= 0x00000002
    DWORD   RequireExperienceFull           : 1; //= 0x00000004
    DWORD   GameVoiceRequiredUI             : 1; //= 0x00000008
    DWORD   TitleSetPresenceString          : 1; //= 0x00000010
    DWORD   NatalTiltControl                : 1; //= 0x00000020
    DWORD   TitleRequiresSkeletalTracking   : 1; //= 0x00000040
    DWORD   TitleSupportsSkeletalTracking   : 1; //= 0x00000080
    DWORD   UseLargeHDsFileCache            : 1; //= 0x00000100
    DWORD   TitleSupportsDeepLink           : 1; //= 0x00000200
    DWORD   TitleBodyProfile                : 1; //= 0x00000400
    DWORD   TitleWinUSB                     : 1; //= 0x00000800
    DWORD   TitleSupportsDeepLinkRefresh    : 1; //= 0x00001000
    DWORD   LocalOnlySockets                : 1; //= 0x00002000
    DWORD   TitleContentAcquireAndDownload  : 1; //= 0x00004000
    DWORD   AllowSystemForeground           : 1; //= 0x00008000
};

enum GAMEREGIONS{
    NorthAmerica        = 0x000000FF,
    Japan               = 0x00000100,
    China               = 0x00000200,
    RestOfAsia          = 0x0000FC00,
    AustraliaNewZealand = 0x00010000,
    RestOfEurope        = 0x00FE0000,
    Europe              = 0x00FF0000,
    RestOfWord          = 0xFF000000,
    AllRegions          = 0xFFFFFFFF
};

enum<SHORT> ENCRYPTIONTYPE{ 
    NotEncrypted    = 0x0000, 
    Encrypted       = 0x0001
};

enum<SHORT> COMPRESSIONTYPE{ 
    NotCompressed   = 0x0001,
    Compressed      = 0x0002,
    DeltaCompressed = 0x0003 
};

enum<BYTE> APPROVALTYPE{
    Unapproved       = 0x00,
    PossibleApproved = 0x20,
    Approved         = 0x40,
    Expired          = 0x60
};
